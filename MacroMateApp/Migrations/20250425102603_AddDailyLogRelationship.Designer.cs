// <auto-generated />
using System;
using MacroMateApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MacroMateApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250425102603_AddDailyLogRelationship")]
    partial class AddDailyLogRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("MacroMateApp.Models.DailyLog", b =>
                {
                    b.Property<int>("DailyLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("DailyLogId");

                    b.ToTable("DailyLog");
                });

            modelBuilder.Entity("MacroMateApp.Models.FoodItem", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Calories")
                        .HasColumnType("REAL");

                    b.Property<double>("Carbs")
                        .HasColumnType("REAL");

                    b.Property<int>("DailyLogId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Fats")
                        .HasColumnType("REAL");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Protein")
                        .HasColumnType("REAL");

                    b.Property<string>("ServingSize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FoodId");

                    b.HasIndex("DailyLogId");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("MacroMateApp.Models.UserGoals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CaloriesGoal")
                        .HasColumnType("REAL");

                    b.Property<double>("CarbGoal")
                        .HasColumnType("REAL");

                    b.Property<double>("FatGoal")
                        .HasColumnType("REAL");

                    b.Property<double>("ProteinGoal")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("MacroMateApp.Models.FoodItem", b =>
                {
                    b.HasOne("MacroMateApp.Models.DailyLog", "DailyLog")
                        .WithMany("FoodItems")
                        .HasForeignKey("DailyLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyLog");
                });

            modelBuilder.Entity("MacroMateApp.Models.DailyLog", b =>
                {
                    b.Navigation("FoodItems");
                });
#pragma warning restore 612, 618
        }
    }
}
